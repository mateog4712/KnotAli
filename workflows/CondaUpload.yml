name: Conda Build & Upload

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          miniconda-version: latest
          channels: conda-forge, defaults
          channel-priority: strict
          architecture: ${{ runner.arch == 'ARM64' && 'arm64' || 'x64' }}

      - name: Install conda-build & anaconda-client
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            arch=$(uname -m)
            if [[ "$arch" == "arm64" ]]; then
              echo "Detected macOS ARM64"
              conda install -y conda-build anaconda-client clang_osx-arm64 clangxx_osx-arm64
            else
              echo "Detected macOS Intel"
              conda install -y conda-build anaconda-client clang_osx-64 clangxx_osx-64
            fi
          else
            echo "Detected Linux"
            conda install -y conda-build anaconda-client
          fi


      - name: Build Conda Package
        env:
          CONDA_BLD_PATH: /tmp/bld
        run: |
          mkdir -p "$CONDA_BLD_PATH"
          
          conda build ./conda_recipe \
          --croot /tmp/bld 

      - name: Upload Package to Anaconda
        if: success()
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          built_pkg=$(conda build ./conda_recipe --croot /tmp/bld --output)
          echo "Built package: $built_pkg"
          conda run -n base anaconda -t "$ANACONDA_API_TOKEN" upload \
            --user COBRALab --label main --force "$built_pkg"